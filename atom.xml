<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>简~单</title>
  
  
  <link href="/Zk-blog/atom.xml" rel="self"/>
  
  <link href="https://sbbq.github.io/"/>
  <updated>2018-05-28T07:39:42.402Z</updated>
  <id>https://sbbq.github.io/</id>
  
  <author>
    <name>Z&#39;k</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://sbbq.github.io//posts/0/"/>
    <id>https://sbbq.github.io//posts/0/</id>
    <published>2018-05-28T05:59:36.012Z</published>
    <updated>2018-05-28T07:39:42.402Z</updated>
    
    <content type="html"><![CDATA[<h4 id="块级绑定"><a href="#块级绑定" class="headerlink" title="块级绑定"></a>块级绑定</h4><h5 id="Var-变量声明和变量提升"><a href="#Var-变量声明和变量提升" class="headerlink" title="Var 变量声明和变量提升"></a>Var 变量声明和变量提升</h5><p>函数内定义Var变量，会自动提升到函数入口声明<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">function getValue(condition) &#123;</span><br><span class="line"></span><br><span class="line">    if (condition) &#123;</span><br><span class="line">        var value = &quot;blue&quot;;</span><br><span class="line"></span><br><span class="line">        // other code</span><br><span class="line"></span><br><span class="line">        return value;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line"></span><br><span class="line">        // value exists here with a value of undefined</span><br><span class="line"></span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // value exists here with a value of undefined</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h5 id="块级声明"><a href="#块级声明" class="headerlink" title="块级声明"></a>块级声明</h5><p>Let 声明变量仅仅在当前块内有效，Let 声明必须在初始化之前<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if (condition) &#123;</span><br><span class="line">    console.log(typeof value);  // ReferenceError!</span><br><span class="line">    let value = &quot;blue&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>典型Let 解决循环问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var funcs = [];</span><br><span class="line"></span><br><span class="line">for (let i = 0; i &lt; 10; i++) &#123;</span><br><span class="line">    funcs.push(function() &#123;</span><br><span class="line">        console.log(i);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">funcs.forEach(function(func) &#123;</span><br><span class="line">    func();     // outputs 0, then 1, then 2, up to 9</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>let 声明 循环中每次创建一个新的i.所以每个函数所带的参数都是自己的i，不会像Var一样变成10.</p><h6 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h6><p>let声明变量仅仅在块内起作用，let在for-in,for-of循环中，会每次循环建立一哥新的绑定，也就意味着每次函数都会保存当前循环的变量</p><p>####函数<br>函数带默认值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function makeRequest(url, timeout = 2000, callback = function() &#123;&#125;) &#123;</span><br><span class="line"></span><br><span class="line">    // the rest of the function</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>函数参数带<code>...</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function pick(object, ...keys) &#123;</span><br><span class="line">    let result = Object.create(null);</span><br><span class="line"></span><br><span class="line">    for (let i = 0, len = keys.length; i &lt; len; i++) &#123;</span><br><span class="line">        result[keys[i]] = object[keys[i]];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>...</code>可以拆解字符串和数组，函数因此可以不限制参数的数量，但是<code>...</code>参数必须是最后一个参数，因为不能确定参数的数量。<br>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.max(...array);</span><br></pre></td></tr></table></figure></p><p>#####箭头函数</p><ul><li>没有<strong><em>this,super,arguments,new.target绑定</em></strong> -this的值是由最近的非箭头函数确定</li><li>不能new</li><li>没有原型</li><li>this不能改变</li></ul><p><strong>没有this绑定</strong><br>由于this没有绑定，所以this 只能由上层作用域链决定<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var PageHandler = &#123;</span><br><span class="line"></span><br><span class="line">    id: &quot;123456&quot;,</span><br><span class="line"></span><br><span class="line">    init: function() &#123;</span><br><span class="line">        document.addEventListener(&quot;click&quot;,</span><br><span class="line">                event =&gt; this.doSomething(event.type), false);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    doSomething: function(type) &#123;</span><br><span class="line">        console.log(&quot;Handling &quot; + type  + &quot; for &quot; + this.id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>例子中的this由于离init最近，所以this与init相同，可以获取到dosomething.<br>详细看<a href="http://blog.csdn.net/yangbingbinga/article/details/61424363" target="_blank" rel="noopener">ES6 this详解</a><br>简单来说：<br><em>普通函数this看调用者，箭头函数this看最近的父执行上下文。</em></p><p><strong>函数尾递归优化</strong><br>递归函数最后调用自身，而不需要函数上下文环境。</p><h6 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h6><p>函数默认参数，函数参数的数组拆解，箭头函数this指向</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;块级绑定&quot;&gt;&lt;a href=&quot;#块级绑定&quot; class=&quot;headerlink&quot; title=&quot;块级绑定&quot;&gt;&lt;/a&gt;块级绑定&lt;/h4&gt;&lt;h5 id=&quot;Var-变量声明和变量提升&quot;&gt;&lt;a href=&quot;#Var-变量声明和变量提升&quot; class=&quot;headerlink
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Z&#39;k First Page</title>
    <link href="https://sbbq.github.io//posts/a149d82f/"/>
    <id>https://sbbq.github.io//posts/a149d82f/</id>
    <published>2018-03-15T13:13:26.147Z</published>
    <updated>2018-03-15T13:17:25.869Z</updated>
    
    <content type="html"><![CDATA[<h2 id="About-this"><a href="#About-this" class="headerlink" title="About this"></a>About this</h2><h3 id="About-That"><a href="#About-That" class="headerlink" title="About That"></a>About That</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;About-this&quot;&gt;&lt;a href=&quot;#About-this&quot; class=&quot;headerlink&quot; title=&quot;About this&quot;&gt;&lt;/a&gt;About this&lt;/h2&gt;&lt;h3 id=&quot;About-That&quot;&gt;&lt;a href=&quot;#About-That&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://sbbq.github.io//posts/4a17b156/"/>
    <id>https://sbbq.github.io//posts/4a17b156/</id>
    <published>2018-03-15T05:41:27.696Z</published>
    <updated>2018-03-15T06:40:51.723Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
